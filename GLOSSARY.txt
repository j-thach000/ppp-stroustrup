# syntax
// - comment
    indicates the beginning of a comment in which statements after it are not read by the program
    comments are used to provide information to humans about the program

<< - insertion operator
    indicates the direction data is moving in 

std::cout - character output
    object that outputs data to console

#include - directive 
    before compilation there's the translation phase in which the .cpp file is scanned and the text is manipulated
    the #include directive replaces the directive with the content of ex: <iostream>

main() - main function
    the function called by the program that is the starting point to execute statements

std::cin - character input
    object from iostream that takes your keyboard input 


------------------------------------------------------------------------------------------------------------------------

# concepts
C++
    a general purpose programming language that focuses on giving the programmer freedom (aka trust the programmer)
    also a large emphasis the ability to control memory management

comment 
    used to give information about the program to the reader
    describe "what" for groups of statements as a high level overview
    describe "why" for individual statements and "magic numbers"

compiler
    used to translate high level programming languages to machine language
    it detects syntax errors which violate the language's rules

compile-time error
    an error occurring at compilation when the syntax of the language is violated

executable
    the result of linking object files and the standard library together 
    it makes the computer hardware run a set of instructions

function    
    a named collection of statements that execute in sequential order

header
    *defining header file
    at the top of the program
    it's a file that acts as an interface between the separately compiled parts of the program (object files)
    it allows these object files to access declarations which are just named entities (objects, variables, functions, etc.)
    **the top of the for loop notation that includes the control variable and loop condition

IDE (integrated development environment)
    a gui program with a suite of tools including:
        - text editor
        - compiler
        - linker
        - syntax check
        - debugger

library
    a package of code made for reuse in other programs that provide a desired functionality

linker  
    a program that connects object code from the compilation process and library files
    it also checks for cross-file dependencies
    once those processes are done, it creates an executable which tells the hardware what to do

object code 
    machine code resulting from the compilation process in object files
    it hasn't be linked up yet to all other relevant object files

output  
    the result of the program's execution

program 
    a set of instructions for the hardware to execute

source code 
    the code written in a high level language before it is compiled
    it's a series of statements which act as instructions for the hardware

statement
    an instruction for the program to perform some action 
    *difference between the statement making the program do something and the program making the computer do something

assignment
    giving an object a value

concatenation
    putting together literals

literals
    values from the set of values that a data type uses

conversion
    changing a value that was associated with one data type to another type

declarations (not relevant yet as of ch04 10/5/22)    
    the introduction of a name with its associated type into a scope

decrement
    composite assignment operator 
    in this case it assigns the value of the variable - 1

definition (a kind of declaration statement)
    specifies the entity to which the declared name refers to and its data type
    we establish the associated object with the declared name vs just introducing a name

increment
    composite assignment operator   
    assigns the value of the variable + 1

initialization (https://www.learncpp.com/cpp-tutorial/variable-assignment-and-initialization/)
    introducing a name to the scope, giving it a data type, and giving it a value at the same time
    basically define and assign at the same time for a variable 

name    
    an identifier for an entity

narrowing
    assigning a value from a data type with a larger range of values to a smaller data type

object
    a region of memory that could be holding data of some type
    
operation
    what can be done to a data type, ex: aritmetic operations

operator    
    the literal representation of the operations that can be done on a data type

type    
    a data type indicates what set of values and the operations that can be performed on that set of values

type safety
    considering whether or not there will be conversion and a loss of precision going from one data type to another

value   
    a piece of data with its associated type

variable    
    a named region of memory that can hold a value

